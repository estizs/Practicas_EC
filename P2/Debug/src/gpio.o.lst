   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"gpio.c"
  21              	.Ltext0:
  22              		.file 1 "../src/gpio.c"
 1698              		.align	2
 1699              		.global	portB_conf
 1701              	portB_conf:
 1702              	.LFB0:
   1:../src/gpio.c **** #include "44b.h"
   2:../src/gpio.c **** #include "gpio.h"
   3:../src/gpio.c **** 
   4:../src/gpio.c **** /* Port B interface implementation */
   5:../src/gpio.c **** 
   6:../src/gpio.c **** int portB_conf(int pin, enum port_mode mode)
   7:../src/gpio.c **** {
 1703              		.loc 1 7 0
 1704              		.cfi_startproc
 1705              		@ Function supports interworking.
 1706              		@ args = 0, pretend = 0, frame = 16
 1707              		@ frame_needed = 1, uses_anonymous_args = 0
 1708 0000 0DC0A0E1 		mov	ip, sp
 1709              	.LCFI0:
 1710              		.cfi_def_cfa_register 12
 1711 0004 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1712 0008 04B04CE2 		sub	fp, ip, #4
 1713              		.cfi_offset 14, -8
 1714              		.cfi_offset 13, -12
 1715              		.cfi_offset 11, -16
 1716              	.LCFI1:
 1717              		.cfi_def_cfa 11, 4
 1718 000c 10D04DE2 		sub	sp, sp, #16
 1719 0010 18000BE5 		str	r0, [fp, #-24]
 1720 0014 0130A0E1 		mov	r3, r1
 1721 0018 19304BE5 		strb	r3, [fp, #-25]
   8:../src/gpio.c **** 	int ret = 0;
 1722              		.loc 1 8 0
 1723 001c 0030A0E3 		mov	r3, #0
 1724 0020 10300BE5 		str	r3, [fp, #-16]
   9:../src/gpio.c **** 	if (pin < 0 || pin > 10)
 1725              		.loc 1 9 0
 1726 0024 18301BE5 		ldr	r3, [fp, #-24]
 1727 0028 000053E3 		cmp	r3, #0
 1728 002c 020000BA 		blt	.L2
 1729              		.loc 1 9 0 is_stmt 0 discriminator 1
 1730 0030 18301BE5 		ldr	r3, [fp, #-24]
 1731 0034 0A0053E3 		cmp	r3, #10
 1732 0038 010000DA 		ble	.L3
 1733              	.L2:
  10:../src/gpio.c **** 		return -1; // indica error
 1734              		.loc 1 10 0 is_stmt 1
 1735 003c 0030E0E3 		mvn	r3, #0
 1736 0040 1B0000EA 		b	.L4
 1737              	.L3:
  11:../src/gpio.c **** 
  12:../src/gpio.c **** 	if (mode == SIGOUT)
 1738              		.loc 1 12 0
 1739 0044 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 1740 0048 020053E3 		cmp	r3, #2
 1741 004c 0800001A 		bne	.L5
  13:../src/gpio.c **** 		// COMPLETAR: poner en rPCONB el bit indicado por pin a 1 para que por
  14:../src/gpio.c **** 		// dicho pin en el puerto B salga la se√±al correspondiente del
  15:../src/gpio.c **** 		// controlador de memoria
  16:../src/gpio.c **** 		rPCONB |= (0x1 << pin);
 1742              		.loc 1 16 0
 1743 0050 6C309FE5 		ldr	r3, .L8
 1744 0054 68209FE5 		ldr	r2, .L8
 1745 0058 001092E5 		ldr	r1, [r2, #0]
 1746 005c 0100A0E3 		mov	r0, #1
 1747 0060 18201BE5 		ldr	r2, [fp, #-24]
 1748 0064 1022A0E1 		mov	r2, r0, asl r2
 1749 0068 022081E1 		orr	r2, r1, r2
 1750 006c 002083E5 		str	r2, [r3, #0]
 1751 0070 0E0000EA 		b	.L6
 1752              	.L5:
  17:../src/gpio.c **** 	else if (mode == OUTPUT)
 1753              		.loc 1 17 0
 1754 0074 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 1755 0078 010053E3 		cmp	r3, #1
 1756 007c 0900001A 		bne	.L7
  18:../src/gpio.c **** 		// COMPLETAR: poner en rPCONB el bit indicado por pin a 0 para que dicho
  19:../src/gpio.c **** 		// pin sea un pin de salida
  20:../src/gpio.c **** 		rPCONB &= ~(0x1 << pin);
 1757              		.loc 1 20 0
 1758 0080 3C309FE5 		ldr	r3, .L8
 1759 0084 38209FE5 		ldr	r2, .L8
 1760 0088 001092E5 		ldr	r1, [r2, #0]
 1761 008c 0100A0E3 		mov	r0, #1
 1762 0090 18201BE5 		ldr	r2, [fp, #-24]
 1763 0094 1022A0E1 		mov	r2, r0, asl r2
 1764 0098 0220E0E1 		mvn	r2, r2
 1765 009c 022001E0 		and	r2, r1, r2
 1766 00a0 002083E5 		str	r2, [r3, #0]
 1767 00a4 010000EA 		b	.L6
 1768              	.L7:
  21:../src/gpio.c **** 	else
  22:../src/gpio.c **** 		ret = -1; // indica error
 1769              		.loc 1 22 0
 1770 00a8 0030E0E3 		mvn	r3, #0
 1771 00ac 10300BE5 		str	r3, [fp, #-16]
 1772              	.L6:
  23:../src/gpio.c **** 
  24:../src/gpio.c **** 	return ret;
 1773              		.loc 1 24 0
 1774 00b0 10301BE5 		ldr	r3, [fp, #-16]
 1775              	.L4:
  25:../src/gpio.c **** }
 1776              		.loc 1 25 0
 1777 00b4 0300A0E1 		mov	r0, r3
 1778 00b8 0CD04BE2 		sub	sp, fp, #12
 1779 00bc 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1780 00c0 1EFF2FE1 		bx	lr
 1781              	.L9:
 1782              		.align	2
 1783              	.L8:
 1784 00c4 0800D201 		.word	30539784
 1785              		.cfi_endproc
 1786              	.LFE0:
 1788              		.align	2
 1789              		.global	portB_write
 1791              	portB_write:
 1792              	.LFB1:
  26:../src/gpio.c **** 
  27:../src/gpio.c **** int portB_write(int pin, enum digital val)
  28:../src/gpio.c **** {
 1793              		.loc 1 28 0
 1794              		.cfi_startproc
 1795              		@ Function supports interworking.
 1796              		@ args = 0, pretend = 0, frame = 8
 1797              		@ frame_needed = 1, uses_anonymous_args = 0
 1798 00c8 0DC0A0E1 		mov	ip, sp
 1799              	.LCFI2:
 1800              		.cfi_def_cfa_register 12
 1801 00cc 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1802 00d0 04B04CE2 		sub	fp, ip, #4
 1803              		.cfi_offset 14, -8
 1804              		.cfi_offset 13, -12
 1805              		.cfi_offset 11, -16
 1806              	.LCFI3:
 1807              		.cfi_def_cfa 11, 4
 1808 00d4 08D04DE2 		sub	sp, sp, #8
 1809 00d8 10000BE5 		str	r0, [fp, #-16]
 1810 00dc 0130A0E1 		mov	r3, r1
 1811 00e0 11304BE5 		strb	r3, [fp, #-17]
  29:../src/gpio.c **** 	if (pin < 0 || pin > 10)
 1812              		.loc 1 29 0
 1813 00e4 10301BE5 		ldr	r3, [fp, #-16]
 1814 00e8 000053E3 		cmp	r3, #0
 1815 00ec 020000BA 		blt	.L11
 1816              		.loc 1 29 0 is_stmt 0 discriminator 1
 1817 00f0 10301BE5 		ldr	r3, [fp, #-16]
 1818 00f4 0A0053E3 		cmp	r3, #10
 1819 00f8 010000DA 		ble	.L12
 1820              	.L11:
  30:../src/gpio.c **** 		return -1; // indica error
 1821              		.loc 1 30 0 is_stmt 1
 1822 00fc 0030E0E3 		mvn	r3, #0
 1823 0100 1A0000EA 		b	.L13
 1824              	.L12:
  31:../src/gpio.c **** 
  32:../src/gpio.c **** 	if (val < 0 || val > 1)
 1825              		.loc 1 32 0
 1826 0104 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 1827 0108 010053E3 		cmp	r3, #1
 1828 010c 0100009A 		bls	.L14
  33:../src/gpio.c **** 		return -1; // indica error
 1829              		.loc 1 33 0
 1830 0110 0030E0E3 		mvn	r3, #0
 1831 0114 150000EA 		b	.L13
 1832              	.L14:
  34:../src/gpio.c **** 
  35:../src/gpio.c **** 	if (val)
 1833              		.loc 1 35 0
 1834 0118 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 1835 011c 000053E3 		cmp	r3, #0
 1836 0120 0800000A 		beq	.L15
  36:../src/gpio.c **** 		// COMPLETAR: poner en rPDATB el bit indicado por pin a 1
  37:../src/gpio.c **** 		rPDATB |= (0x1 << pin);
 1837              		.loc 1 37 0
 1838 0124 54309FE5 		ldr	r3, .L17
 1839 0128 50209FE5 		ldr	r2, .L17
 1840 012c 001092E5 		ldr	r1, [r2, #0]
 1841 0130 0100A0E3 		mov	r0, #1
 1842 0134 10201BE5 		ldr	r2, [fp, #-16]
 1843 0138 1022A0E1 		mov	r2, r0, asl r2
 1844 013c 022081E1 		orr	r2, r1, r2
 1845 0140 002083E5 		str	r2, [r3, #0]
 1846 0144 080000EA 		b	.L16
 1847              	.L15:
  38:../src/gpio.c **** 	else
  39:../src/gpio.c **** 		// COMPLETAR: poner en rPDATB el bit indicado por pin a 0
  40:../src/gpio.c **** 		rPDATB &= ~(0x1 << pin);
 1848              		.loc 1 40 0
 1849 0148 30309FE5 		ldr	r3, .L17
 1850 014c 2C209FE5 		ldr	r2, .L17
 1851 0150 001092E5 		ldr	r1, [r2, #0]
 1852 0154 0100A0E3 		mov	r0, #1
 1853 0158 10201BE5 		ldr	r2, [fp, #-16]
 1854 015c 1022A0E1 		mov	r2, r0, asl r2
 1855 0160 0220E0E1 		mvn	r2, r2
 1856 0164 022001E0 		and	r2, r1, r2
 1857 0168 002083E5 		str	r2, [r3, #0]
 1858              	.L16:
  41:../src/gpio.c **** 
  42:../src/gpio.c **** 	return 0;
 1859              		.loc 1 42 0
 1860 016c 0030A0E3 		mov	r3, #0
 1861              	.L13:
  43:../src/gpio.c **** }
 1862              		.loc 1 43 0
 1863 0170 0300A0E1 		mov	r0, r3
 1864 0174 0CD04BE2 		sub	sp, fp, #12
 1865 0178 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1866 017c 1EFF2FE1 		bx	lr
 1867              	.L18:
 1868              		.align	2
 1869              	.L17:
 1870 0180 0C00D201 		.word	30539788
 1871              		.cfi_endproc
 1872              	.LFE1:
 1874              		.align	2
 1875              		.global	portG_conf
 1877              	portG_conf:
 1878              	.LFB2:
  44:../src/gpio.c **** 
  45:../src/gpio.c **** /* Port G interface implementation */
  46:../src/gpio.c **** 
  47:../src/gpio.c **** int portG_conf(int pin, enum port_mode mode)
  48:../src/gpio.c **** {
 1879              		.loc 1 48 0
 1880              		.cfi_startproc
 1881              		@ Function supports interworking.
 1882              		@ args = 0, pretend = 0, frame = 16
 1883              		@ frame_needed = 1, uses_anonymous_args = 0
 1884 0184 0DC0A0E1 		mov	ip, sp
 1885              	.LCFI4:
 1886              		.cfi_def_cfa_register 12
 1887 0188 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1888 018c 04B04CE2 		sub	fp, ip, #4
 1889              		.cfi_offset 14, -8
 1890              		.cfi_offset 13, -12
 1891              		.cfi_offset 11, -16
 1892              	.LCFI5:
 1893              		.cfi_def_cfa 11, 4
 1894 0190 10D04DE2 		sub	sp, sp, #16
 1895 0194 18000BE5 		str	r0, [fp, #-24]
 1896 0198 0130A0E1 		mov	r3, r1
 1897 019c 19304BE5 		strb	r3, [fp, #-25]
  49:../src/gpio.c **** 	int pos  = pin*2;
 1898              		.loc 1 49 0
 1899 01a0 18301BE5 		ldr	r3, [fp, #-24]
 1900 01a4 8330A0E1 		mov	r3, r3, asl #1
 1901 01a8 10300BE5 		str	r3, [fp, #-16]
  50:../src/gpio.c **** 
  51:../src/gpio.c **** 	if (pin < 0 || pin > 7)
 1902              		.loc 1 51 0
 1903 01ac 18301BE5 		ldr	r3, [fp, #-24]
 1904 01b0 000053E3 		cmp	r3, #0
 1905 01b4 020000BA 		blt	.L20
 1906              		.loc 1 51 0 is_stmt 0 discriminator 1
 1907 01b8 18301BE5 		ldr	r3, [fp, #-24]
 1908 01bc 070053E3 		cmp	r3, #7
 1909 01c0 010000DA 		ble	.L21
 1910              	.L20:
  52:../src/gpio.c **** 		return -1; // indica error
 1911              		.loc 1 52 0 is_stmt 1
 1912 01c4 0030E0E3 		mvn	r3, #0
 1913 01c8 370000EA 		b	.L22
 1914              	.L21:
  53:../src/gpio.c **** 
  54:../src/gpio.c **** 	switch (mode) {
 1915              		.loc 1 54 0
 1916 01cc 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 1917 01d0 030053E3 		cmp	r3, #3
 1918 01d4 03F19F97 		ldrls	pc, [pc, r3, asl #2]
 1919 01d8 300000EA 		b	.L23
 1920              	.L28:
 1921 01dc EC010000 		.word	.L24
 1922 01e0 14020000 		.word	.L25
 1923 01e4 48020000 		.word	.L26
 1924 01e8 7C020000 		.word	.L27
 1925              	.L24:
  55:../src/gpio.c **** 		case INPUT:
  56:../src/gpio.c **** 			// COMPLETAR: poner en rPCONG 00 a partir de la posici√≥n pos para
  57:../src/gpio.c **** 			// configurar como pin de entrada el pin indicado por el par√°metro pin
  58:../src/gpio.c **** 			rPCONG &= ~(0x3 << pos);
 1926              		.loc 1 58 0
 1927 01ec C8309FE5 		ldr	r3, .L30
 1928 01f0 C4209FE5 		ldr	r2, .L30
 1929 01f4 001092E5 		ldr	r1, [r2, #0]
 1930 01f8 0300A0E3 		mov	r0, #3
 1931 01fc 10201BE5 		ldr	r2, [fp, #-16]
 1932 0200 1022A0E1 		mov	r2, r0, asl r2
 1933 0204 0220E0E1 		mvn	r2, r2
 1934 0208 022001E0 		and	r2, r1, r2
 1935 020c 002083E5 		str	r2, [r3, #0]
  59:../src/gpio.c **** 			break;
 1936              		.loc 1 59 0
 1937 0210 240000EA 		b	.L29
 1938              	.L25:
  60:../src/gpio.c **** 		case OUTPUT:
  61:../src/gpio.c **** 			// COMPLETAR: poner en rPCONG 01 a partir de la posici√≥n pos para
  62:../src/gpio.c **** 			// configurar como pin de salida el pin indicado por el par√°metro pin
  63:../src/gpio.c **** 			// En dos pasos -> primero se pone todo a 0 con una and
  64:../src/gpio.c **** 			// Luego se pone a 01 (0x1) con una or
  65:../src/gpio.c **** 			rPCONG &= ~(0x0 << pos);
 1939              		.loc 1 65 0
 1940 0214 A0309FE5 		ldr	r3, .L30
 1941 0218 9C209FE5 		ldr	r2, .L30
 1942 021c 002092E5 		ldr	r2, [r2, #0]
 1943 0220 002083E5 		str	r2, [r3, #0]
  66:../src/gpio.c **** 			rPCONG |= (0x1 << pos);
 1944              		.loc 1 66 0
 1945 0224 90309FE5 		ldr	r3, .L30
 1946 0228 8C209FE5 		ldr	r2, .L30
 1947 022c 001092E5 		ldr	r1, [r2, #0]
 1948 0230 0100A0E3 		mov	r0, #1
 1949 0234 10201BE5 		ldr	r2, [fp, #-16]
 1950 0238 1022A0E1 		mov	r2, r0, asl r2
 1951 023c 022081E1 		orr	r2, r1, r2
 1952 0240 002083E5 		str	r2, [r3, #0]
  67:../src/gpio.c **** 
  68:../src/gpio.c **** 			break;
 1953              		.loc 1 68 0
 1954 0244 170000EA 		b	.L29
 1955              	.L26:
  69:../src/gpio.c **** 		case SIGOUT:
  70:../src/gpio.c **** 			// COMPLETAR: poner en rPCONG 10 a partir de la posici√≥n pos para
  71:../src/gpio.c **** 			// que salga la se√±al interna correspondiente por el pin indicado
  72:../src/gpio.c **** 			// por el par√°metro pin
  73:../src/gpio.c **** 			// En dos pasos -> primero se pone todo a 0 con una and
  74:../src/gpio.c **** 			// Luego se pone a 10 (0x2) con una or
  75:../src/gpio.c **** 			rPCONG &= ~(0x0 << pos);
 1956              		.loc 1 75 0
 1957 0248 6C309FE5 		ldr	r3, .L30
 1958 024c 68209FE5 		ldr	r2, .L30
 1959 0250 002092E5 		ldr	r2, [r2, #0]
 1960 0254 002083E5 		str	r2, [r3, #0]
  76:../src/gpio.c **** 			rPCONG |= (0x2 << pos);
 1961              		.loc 1 76 0
 1962 0258 5C309FE5 		ldr	r3, .L30
 1963 025c 58209FE5 		ldr	r2, .L30
 1964 0260 001092E5 		ldr	r1, [r2, #0]
 1965 0264 0200A0E3 		mov	r0, #2
 1966 0268 10201BE5 		ldr	r2, [fp, #-16]
 1967 026c 1022A0E1 		mov	r2, r0, asl r2
 1968 0270 022081E1 		orr	r2, r1, r2
 1969 0274 002083E5 		str	r2, [r3, #0]
  77:../src/gpio.c **** 			break;
 1970              		.loc 1 77 0
 1971 0278 0A0000EA 		b	.L29
 1972              	.L27:
  78:../src/gpio.c **** 		case EINT:
  79:../src/gpio.c **** 			// COMPLETAR: poner en rPCONG 11 a partir de la posici√≥n pos para
  80:../src/gpio.c **** 			// habilitar la generaci√≥n de interrupciones externas por el pin
  81:../src/gpio.c **** 			// indicado por el par√°metro pin
  82:../src/gpio.c **** 			rPCONG |= (0x3 << pos);
 1973              		.loc 1 82 0
 1974 027c 38309FE5 		ldr	r3, .L30
 1975 0280 34209FE5 		ldr	r2, .L30
 1976 0284 001092E5 		ldr	r1, [r2, #0]
 1977 0288 0300A0E3 		mov	r0, #3
 1978 028c 10201BE5 		ldr	r2, [fp, #-16]
 1979 0290 1022A0E1 		mov	r2, r0, asl r2
 1980 0294 022081E1 		orr	r2, r1, r2
 1981 0298 002083E5 		str	r2, [r3, #0]
  83:../src/gpio.c **** 			break;
 1982              		.loc 1 83 0
 1983 029c 010000EA 		b	.L29
 1984              	.L23:
  84:../src/gpio.c **** 		default:
  85:../src/gpio.c **** 			return -1;
 1985              		.loc 1 85 0
 1986 02a0 0030E0E3 		mvn	r3, #0
 1987 02a4 000000EA 		b	.L22
 1988              	.L29:
  86:../src/gpio.c **** 	}
  87:../src/gpio.c **** 
  88:../src/gpio.c **** 	return 0;
 1989              		.loc 1 88 0
 1990 02a8 0030A0E3 		mov	r3, #0
 1991              	.L22:
  89:../src/gpio.c **** }
 1992              		.loc 1 89 0
 1993 02ac 0300A0E1 		mov	r0, r3
 1994 02b0 0CD04BE2 		sub	sp, fp, #12
 1995 02b4 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1996 02b8 1EFF2FE1 		bx	lr
 1997              	.L31:
 1998              		.align	2
 1999              	.L30:
 2000 02bc 4000D201 		.word	30539840
 2001              		.cfi_endproc
 2002              	.LFE2:
 2004              		.align	2
 2005              		.global	portG_eint_trig
 2007              	portG_eint_trig:
 2008              	.LFB3:
  90:../src/gpio.c **** 
  91:../src/gpio.c **** int portG_eint_trig(int pin, enum trigger trig)
  92:../src/gpio.c **** {
 2009              		.loc 1 92 0
 2010              		.cfi_startproc
 2011              		@ Function supports interworking.
 2012              		@ args = 0, pretend = 0, frame = 8
 2013              		@ frame_needed = 1, uses_anonymous_args = 0
 2014 02c0 0DC0A0E1 		mov	ip, sp
 2015              	.LCFI6:
 2016              		.cfi_def_cfa_register 12
 2017 02c4 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2018 02c8 04B04CE2 		sub	fp, ip, #4
 2019              		.cfi_offset 14, -8
 2020              		.cfi_offset 13, -12
 2021              		.cfi_offset 11, -16
 2022              	.LCFI7:
 2023              		.cfi_def_cfa 11, 4
 2024 02cc 08D04DE2 		sub	sp, sp, #8
 2025 02d0 10000BE5 		str	r0, [fp, #-16]
 2026 02d4 0130A0E1 		mov	r3, r1
 2027 02d8 11304BE5 		strb	r3, [fp, #-17]
  93:../src/gpio.c **** 	// A COMPLETAR EN LA SEGUNDA PARTE DE LA PR√°CTICA
  94:../src/gpio.c **** 	return 0;
 2028              		.loc 1 94 0
 2029 02dc 0030A0E3 		mov	r3, #0
  95:../src/gpio.c **** }
 2030              		.loc 1 95 0
 2031 02e0 0300A0E1 		mov	r0, r3
 2032 02e4 0CD04BE2 		sub	sp, fp, #12
 2033 02e8 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2034 02ec 1EFF2FE1 		bx	lr
 2035              		.cfi_endproc
 2036              	.LFE3:
 2038              		.align	2
 2039              		.global	portG_write
 2041              	portG_write:
 2042              	.LFB4:
  96:../src/gpio.c **** 
  97:../src/gpio.c **** int portG_write(int pin, enum digital val)
  98:../src/gpio.c **** {
 2043              		.loc 1 98 0
 2044              		.cfi_startproc
 2045              		@ Function supports interworking.
 2046              		@ args = 0, pretend = 0, frame = 16
 2047              		@ frame_needed = 1, uses_anonymous_args = 0
 2048 02f0 0DC0A0E1 		mov	ip, sp
 2049              	.LCFI8:
 2050              		.cfi_def_cfa_register 12
 2051 02f4 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2052 02f8 04B04CE2 		sub	fp, ip, #4
 2053              		.cfi_offset 14, -8
 2054              		.cfi_offset 13, -12
 2055              		.cfi_offset 11, -16
 2056              	.LCFI9:
 2057              		.cfi_def_cfa 11, 4
 2058 02fc 10D04DE2 		sub	sp, sp, #16
 2059 0300 18000BE5 		str	r0, [fp, #-24]
 2060 0304 0130A0E1 		mov	r3, r1
 2061 0308 19304BE5 		strb	r3, [fp, #-25]
  99:../src/gpio.c **** 	int pos = pin*2;
 2062              		.loc 1 99 0
 2063 030c 18301BE5 		ldr	r3, [fp, #-24]
 2064 0310 8330A0E1 		mov	r3, r3, asl #1
 2065 0314 10300BE5 		str	r3, [fp, #-16]
 100:../src/gpio.c **** 
 101:../src/gpio.c **** 	if (pin < 0 || pin > 7)
 2066              		.loc 1 101 0
 2067 0318 18301BE5 		ldr	r3, [fp, #-24]
 2068 031c 000053E3 		cmp	r3, #0
 2069 0320 020000BA 		blt	.L34
 2070              		.loc 1 101 0 is_stmt 0 discriminator 1
 2071 0324 18301BE5 		ldr	r3, [fp, #-24]
 2072 0328 070053E3 		cmp	r3, #7
 2073 032c 010000DA 		ble	.L35
 2074              	.L34:
 102:../src/gpio.c **** 		return -1; // indica error
 2075              		.loc 1 102 0 is_stmt 1
 2076 0330 0030E0E3 		mvn	r3, #0
 2077 0334 270000EA 		b	.L36
 2078              	.L35:
 103:../src/gpio.c **** 
 104:../src/gpio.c **** 	if (val < 0 || val > 1)
 2079              		.loc 1 104 0
 2080 0338 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 2081 033c 010053E3 		cmp	r3, #1
 2082 0340 0100009A 		bls	.L37
 105:../src/gpio.c **** 		return -1; // indica error
 2083              		.loc 1 105 0
 2084 0344 0030E0E3 		mvn	r3, #0
 2085 0348 220000EA 		b	.L36
 2086              	.L37:
 106:../src/gpio.c **** 
 107:../src/gpio.c **** 	if ((rPCONG & (0x3 << pos)) != (0x1 << pos))
 2087              		.loc 1 107 0
 2088 034c 94309FE5 		ldr	r3, .L41
 2089 0350 002093E5 		ldr	r2, [r3, #0]
 2090 0354 0310A0E3 		mov	r1, #3
 2091 0358 10301BE5 		ldr	r3, [fp, #-16]
 2092 035c 1133A0E1 		mov	r3, r1, asl r3
 2093 0360 032002E0 		and	r2, r2, r3
 2094 0364 0110A0E3 		mov	r1, #1
 2095 0368 10301BE5 		ldr	r3, [fp, #-16]
 2096 036c 1133A0E1 		mov	r3, r1, asl r3
 2097 0370 030052E1 		cmp	r2, r3
 2098 0374 0100000A 		beq	.L38
 108:../src/gpio.c **** 		return -1; // indica error
 2099              		.loc 1 108 0
 2100 0378 0030E0E3 		mvn	r3, #0
 2101 037c 150000EA 		b	.L36
 2102              	.L38:
 109:../src/gpio.c **** 
 110:../src/gpio.c **** 	if (val)
 2103              		.loc 1 110 0
 2104 0380 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 2105 0384 000053E3 		cmp	r3, #0
 2106 0388 0800000A 		beq	.L39
 111:../src/gpio.c **** 		// COMPLETAR: poner en rPDATG el bit indicado por pin a 1
 112:../src/gpio.c **** 		rPDATG |= (0x1 << pos);
 2107              		.loc 1 112 0
 2108 038c 58309FE5 		ldr	r3, .L41+4
 2109 0390 54209FE5 		ldr	r2, .L41+4
 2110 0394 001092E5 		ldr	r1, [r2, #0]
 2111 0398 0100A0E3 		mov	r0, #1
 2112 039c 10201BE5 		ldr	r2, [fp, #-16]
 2113 03a0 1022A0E1 		mov	r2, r0, asl r2
 2114 03a4 022081E1 		orr	r2, r1, r2
 2115 03a8 002083E5 		str	r2, [r3, #0]
 2116 03ac 080000EA 		b	.L40
 2117              	.L39:
 113:../src/gpio.c **** 	else
 114:../src/gpio.c **** 		// COMPLETAR: poner en rPDATG el bit indicado por pin a 0
 115:../src/gpio.c **** 		rPDATG &= ~(0x1 << pos);
 2118              		.loc 1 115 0
 2119 03b0 34309FE5 		ldr	r3, .L41+4
 2120 03b4 30209FE5 		ldr	r2, .L41+4
 2121 03b8 001092E5 		ldr	r1, [r2, #0]
 2122 03bc 0100A0E3 		mov	r0, #1
 2123 03c0 10201BE5 		ldr	r2, [fp, #-16]
 2124 03c4 1022A0E1 		mov	r2, r0, asl r2
 2125 03c8 0220E0E1 		mvn	r2, r2
 2126 03cc 022001E0 		and	r2, r1, r2
 2127 03d0 002083E5 		str	r2, [r3, #0]
 2128              	.L40:
 116:../src/gpio.c **** 
 117:../src/gpio.c **** 	return 0;
 2129              		.loc 1 117 0
 2130 03d4 0030A0E3 		mov	r3, #0
 2131              	.L36:
 118:../src/gpio.c **** }
 2132              		.loc 1 118 0
 2133 03d8 0300A0E1 		mov	r0, r3
 2134 03dc 0CD04BE2 		sub	sp, fp, #12
 2135 03e0 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2136 03e4 1EFF2FE1 		bx	lr
 2137              	.L42:
 2138              		.align	2
 2139              	.L41:
 2140 03e8 4000D201 		.word	30539840
 2141 03ec 4400D201 		.word	30539844
 2142              		.cfi_endproc
 2143              	.LFE4:
 2145              		.align	2
 2146              		.global	portG_read
 2148              	portG_read:
 2149              	.LFB5:
 119:../src/gpio.c **** 
 120:../src/gpio.c **** int portG_read(int pin, enum digital* val)
 121:../src/gpio.c **** {
 2150              		.loc 1 121 0
 2151              		.cfi_startproc
 2152              		@ Function supports interworking.
 2153              		@ args = 0, pretend = 0, frame = 16
 2154              		@ frame_needed = 1, uses_anonymous_args = 0
 2155 03f0 0DC0A0E1 		mov	ip, sp
 2156              	.LCFI10:
 2157              		.cfi_def_cfa_register 12
 2158 03f4 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2159 03f8 04B04CE2 		sub	fp, ip, #4
 2160              		.cfi_offset 14, -8
 2161              		.cfi_offset 13, -12
 2162              		.cfi_offset 11, -16
 2163              	.LCFI11:
 2164              		.cfi_def_cfa 11, 4
 2165 03fc 10D04DE2 		sub	sp, sp, #16
 2166 0400 18000BE5 		str	r0, [fp, #-24]
 2167 0404 1C100BE5 		str	r1, [fp, #-28]
 122:../src/gpio.c **** 	int pos = pin*2;
 2168              		.loc 1 122 0
 2169 0408 18301BE5 		ldr	r3, [fp, #-24]
 2170 040c 8330A0E1 		mov	r3, r3, asl #1
 2171 0410 10300BE5 		str	r3, [fp, #-16]
 123:../src/gpio.c **** 
 124:../src/gpio.c **** 	if (pin < 0 || pin > 7)
 2172              		.loc 1 124 0
 2173 0414 18301BE5 		ldr	r3, [fp, #-24]
 2174 0418 000053E3 		cmp	r3, #0
 2175 041c 020000BA 		blt	.L44
 2176              		.loc 1 124 0 is_stmt 0 discriminator 1
 2177 0420 18301BE5 		ldr	r3, [fp, #-24]
 2178 0424 070053E3 		cmp	r3, #7
 2179 0428 010000DA 		ble	.L45
 2180              	.L44:
 125:../src/gpio.c **** 		return -1; // indica error
 2181              		.loc 1 125 0 is_stmt 1
 2182 042c 0030E0E3 		mvn	r3, #0
 2183 0430 1C0000EA 		b	.L46
 2184              	.L45:
 126:../src/gpio.c **** 
 127:../src/gpio.c **** 	if (rPCONG & (0x3 << pos))
 2185              		.loc 1 127 0
 2186 0434 7C309FE5 		ldr	r3, .L50
 2187 0438 002093E5 		ldr	r2, [r3, #0]
 2188 043c 0310A0E3 		mov	r1, #3
 2189 0440 10301BE5 		ldr	r3, [fp, #-16]
 2190 0444 1133A0E1 		mov	r3, r1, asl r3
 2191 0448 033002E0 		and	r3, r2, r3
 2192 044c 000053E3 		cmp	r3, #0
 2193 0450 0100000A 		beq	.L47
 128:../src/gpio.c **** 		return -1; // indica error
 2194              		.loc 1 128 0
 2195 0454 0030E0E3 		mvn	r3, #0
 2196 0458 120000EA 		b	.L46
 2197              	.L47:
 129:../src/gpio.c **** 	/*COMPLETAR: true si est√° a 1 en rPDATG el pin indicado por el par√°metro pin*/
 130:../src/gpio.c **** 	if ((rPDATG & (0x1 << pin)) == (0x1 << pin))
 2198              		.loc 1 130 0
 2199 045c 58309FE5 		ldr	r3, .L50+4
 2200 0460 002093E5 		ldr	r2, [r3, #0]
 2201 0464 0110A0E3 		mov	r1, #1
 2202 0468 18301BE5 		ldr	r3, [fp, #-24]
 2203 046c 1133A0E1 		mov	r3, r1, asl r3
 2204 0470 032002E0 		and	r2, r2, r3
 2205 0474 0110A0E3 		mov	r1, #1
 2206 0478 18301BE5 		ldr	r3, [fp, #-24]
 2207 047c 1133A0E1 		mov	r3, r1, asl r3
 2208 0480 030052E1 		cmp	r2, r3
 2209 0484 0300001A 		bne	.L48
 131:../src/gpio.c **** 		*val = HIGH;
 2210              		.loc 1 131 0
 2211 0488 1C301BE5 		ldr	r3, [fp, #-28]
 2212 048c 0120A0E3 		mov	r2, #1
 2213 0490 0020C3E5 		strb	r2, [r3, #0]
 2214 0494 020000EA 		b	.L49
 2215              	.L48:
 132:../src/gpio.c **** 	else
 133:../src/gpio.c **** 		*val = LOW;
 2216              		.loc 1 133 0
 2217 0498 1C301BE5 		ldr	r3, [fp, #-28]
 2218 049c 0020A0E3 		mov	r2, #0
 2219 04a0 0020C3E5 		strb	r2, [r3, #0]
 2220              	.L49:
 134:../src/gpio.c **** 
 135:../src/gpio.c **** 	return 0;
 2221              		.loc 1 135 0
 2222 04a4 0030A0E3 		mov	r3, #0
 2223              	.L46:
 136:../src/gpio.c **** }
 2224              		.loc 1 136 0
 2225 04a8 0300A0E1 		mov	r0, r3
 2226 04ac 0CD04BE2 		sub	sp, fp, #12
 2227 04b0 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2228 04b4 1EFF2FE1 		bx	lr
 2229              	.L51:
 2230              		.align	2
 2231              	.L50:
 2232 04b8 4000D201 		.word	30539840
 2233 04bc 4400D201 		.word	30539844
 2234              		.cfi_endproc
 2235              	.LFE5:
 2237              		.align	2
 2238              		.global	portG_conf_pup
 2240              	portG_conf_pup:
 2241              	.LFB6:
 137:../src/gpio.c **** 
 138:../src/gpio.c **** int portG_conf_pup(int pin, enum enable st)
 139:../src/gpio.c **** {
 2242              		.loc 1 139 0
 2243              		.cfi_startproc
 2244              		@ Function supports interworking.
 2245              		@ args = 0, pretend = 0, frame = 8
 2246              		@ frame_needed = 1, uses_anonymous_args = 0
 2247 04c0 0DC0A0E1 		mov	ip, sp
 2248              	.LCFI12:
 2249              		.cfi_def_cfa_register 12
 2250 04c4 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2251 04c8 04B04CE2 		sub	fp, ip, #4
 2252              		.cfi_offset 14, -8
 2253              		.cfi_offset 13, -12
 2254              		.cfi_offset 11, -16
 2255              	.LCFI13:
 2256              		.cfi_def_cfa 11, 4
 2257 04cc 08D04DE2 		sub	sp, sp, #8
 2258 04d0 10000BE5 		str	r0, [fp, #-16]
 2259 04d4 0130A0E1 		mov	r3, r1
 2260 04d8 11304BE5 		strb	r3, [fp, #-17]
 140:../src/gpio.c **** 	if (pin < 0 || pin > 7)
 2261              		.loc 1 140 0
 2262 04dc 10301BE5 		ldr	r3, [fp, #-16]
 2263 04e0 000053E3 		cmp	r3, #0
 2264 04e4 020000BA 		blt	.L53
 2265              		.loc 1 140 0 is_stmt 0 discriminator 1
 2266 04e8 10301BE5 		ldr	r3, [fp, #-16]
 2267 04ec 070053E3 		cmp	r3, #7
 2268 04f0 010000DA 		ble	.L54
 2269              	.L53:
 141:../src/gpio.c **** 		return -1; // indica error
 2270              		.loc 1 141 0 is_stmt 1
 2271 04f4 0030E0E3 		mvn	r3, #0
 2272 04f8 1D0000EA 		b	.L55
 2273              	.L54:
 142:../src/gpio.c **** 
 143:../src/gpio.c **** 	if (st != ENABLE && st != DISABLE)
 2274              		.loc 1 143 0
 2275 04fc 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2276 0500 010053E3 		cmp	r3, #1
 2277 0504 0400000A 		beq	.L56
 2278              		.loc 1 143 0 is_stmt 0 discriminator 1
 2279 0508 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2280 050c 000053E3 		cmp	r3, #0
 2281 0510 0100000A 		beq	.L56
 144:../src/gpio.c **** 		return -1; // indica error
 2282              		.loc 1 144 0 is_stmt 1
 2283 0514 0030E0E3 		mvn	r3, #0
 2284 0518 150000EA 		b	.L55
 2285              	.L56:
 145:../src/gpio.c **** 
 146:../src/gpio.c **** 	if (st == ENABLE)
 2286              		.loc 1 146 0
 2287 051c 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2288 0520 010053E3 		cmp	r3, #1
 2289 0524 0800001A 		bne	.L57
 147:../src/gpio.c **** 		// COMPLETAR: poner el pin de rPUPG indicado por el parametro pin al valor adecuado,
 148:../src/gpio.c **** 		// para activar la resistencia de pull-up
 149:../src/gpio.c **** 		rPUPG |= (0x1 << pin);
 2290              		.loc 1 149 0
 2291 0528 54309FE5 		ldr	r3, .L59
 2292 052c 50209FE5 		ldr	r2, .L59
 2293 0530 001092E5 		ldr	r1, [r2, #0]
 2294 0534 0100A0E3 		mov	r0, #1
 2295 0538 10201BE5 		ldr	r2, [fp, #-16]
 2296 053c 1022A0E1 		mov	r2, r0, asl r2
 2297 0540 022081E1 		orr	r2, r1, r2
 2298 0544 002083E5 		str	r2, [r3, #0]
 2299 0548 080000EA 		b	.L58
 2300              	.L57:
 150:../src/gpio.c **** 	else
 151:../src/gpio.c **** 		// COMPLETAR: poner el pin de rPUPG indicado por el parametro pin al valor adecuado,
 152:../src/gpio.c **** 		// para desactivar la resistencia de pull-up
 153:../src/gpio.c **** 		rPUPG &= ~(0x1 << pin);
 2301              		.loc 1 153 0
 2302 054c 30309FE5 		ldr	r3, .L59
 2303 0550 2C209FE5 		ldr	r2, .L59
 2304 0554 001092E5 		ldr	r1, [r2, #0]
 2305 0558 0100A0E3 		mov	r0, #1
 2306 055c 10201BE5 		ldr	r2, [fp, #-16]
 2307 0560 1022A0E1 		mov	r2, r0, asl r2
 2308 0564 0220E0E1 		mvn	r2, r2
 2309 0568 022001E0 		and	r2, r1, r2
 2310 056c 002083E5 		str	r2, [r3, #0]
 2311              	.L58:
 154:../src/gpio.c **** 
 155:../src/gpio.c **** 	return 0;
 2312              		.loc 1 155 0
 2313 0570 0030A0E3 		mov	r3, #0
 2314              	.L55:
 156:../src/gpio.c **** }
 2315              		.loc 1 156 0
 2316 0574 0300A0E1 		mov	r0, r3
 2317 0578 0CD04BE2 		sub	sp, fp, #12
 2318 057c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2319 0580 1EFF2FE1 		bx	lr
 2320              	.L60:
 2321              		.align	2
 2322              	.L59:
 2323 0584 4800D201 		.word	30539848
 2324              		.cfi_endproc
 2325              	.LFE6:
 2327              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 gpio.c
C:\Users\estib\AppData\Local\Temp\ccQP5opp.s:1698   .text:00000000 $a
C:\Users\estib\AppData\Local\Temp\ccQP5opp.s:1701   .text:00000000 portB_conf
C:\Users\estib\AppData\Local\Temp\ccQP5opp.s:1784   .text:000000c4 $d
C:\Users\estib\AppData\Local\Temp\ccQP5opp.s:1788   .text:000000c8 $a
C:\Users\estib\AppData\Local\Temp\ccQP5opp.s:1791   .text:000000c8 portB_write
C:\Users\estib\AppData\Local\Temp\ccQP5opp.s:1870   .text:00000180 $d
C:\Users\estib\AppData\Local\Temp\ccQP5opp.s:1874   .text:00000184 $a
C:\Users\estib\AppData\Local\Temp\ccQP5opp.s:1877   .text:00000184 portG_conf
C:\Users\estib\AppData\Local\Temp\ccQP5opp.s:1921   .text:000001dc $d
C:\Users\estib\AppData\Local\Temp\ccQP5opp.s:1927   .text:000001ec $a
C:\Users\estib\AppData\Local\Temp\ccQP5opp.s:2000   .text:000002bc $d
C:\Users\estib\AppData\Local\Temp\ccQP5opp.s:2004   .text:000002c0 $a
C:\Users\estib\AppData\Local\Temp\ccQP5opp.s:2007   .text:000002c0 portG_eint_trig
C:\Users\estib\AppData\Local\Temp\ccQP5opp.s:2041   .text:000002f0 portG_write
C:\Users\estib\AppData\Local\Temp\ccQP5opp.s:2140   .text:000003e8 $d
C:\Users\estib\AppData\Local\Temp\ccQP5opp.s:2145   .text:000003f0 $a
C:\Users\estib\AppData\Local\Temp\ccQP5opp.s:2148   .text:000003f0 portG_read
C:\Users\estib\AppData\Local\Temp\ccQP5opp.s:2232   .text:000004b8 $d
C:\Users\estib\AppData\Local\Temp\ccQP5opp.s:2237   .text:000004c0 $a
C:\Users\estib\AppData\Local\Temp\ccQP5opp.s:2240   .text:000004c0 portG_conf_pup
C:\Users\estib\AppData\Local\Temp\ccQP5opp.s:2323   .text:00000584 $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
